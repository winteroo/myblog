(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{478:function(a,t,s){"use strict";s.r(t);var v=s(18),r=Object(v.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"java基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java基础"}},[a._v("#")]),a._v(" Java基础")]),a._v(" "),s("h2",{attrs:{id:"_1-设置java编译编码规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-设置java编译编码规范"}},[a._v("#")]),a._v(" 1.设置java编译编码规范")]),a._v(" "),s("p",[a._v("解决java无法输出中文的问题，设置以UTF-8的格式编译")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("javac -encoding UTF-8  HelloWorld.java\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"_2-java原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-java原则"}},[a._v("#")]),a._v(" 2.java原则")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("一个Java源码只能定义一个public类型的class，并且class名称和文件名要完全一致；")])]),a._v(" "),s("li",[s("p",[a._v("使用javac可以将.java源码编译成.class字节码；")])]),a._v(" "),s("li",[s("p",[a._v("使用java可以运行一个已编译的Java程序，参数是类名。")])])]),a._v(" "),s("h2",{attrs:{id:"_3-window下杀进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-window下杀进程"}},[a._v("#")]),a._v(" 3.window下杀进程")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查找port端口的进程")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("netstat")]),a._v(" -ano "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" findstr "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("port"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 杀死PID进程")]),a._v("\ntaskkill -PID "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("PID"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -F\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h2",{attrs:{id:"_4-java中的基本数据类型及其包装类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-java中的基本数据类型及其包装类"}},[a._v("#")]),a._v(" 4.java中的基本数据类型及其包装类")]),a._v(" "),s("p",[a._v("虽然 Java 语言是典型的面向对象编程语言，但其中的八种基本数据类型并不支持面向对象编程，\n基本类型的数据不具备“对象”的特性——不携带属性、没有方法可调用。 沿用它们只是为了迎合人\n类根深蒂固的习惯，并的确能简单、有效地进行常规数据处理。这种借助于非面向对象技术的做法\n有时也会带来不便，比如引用类型数据均继承了 Object 类的特性，要转换为 String 类型（经常\n有这种需要）时只要简单调用 Object 类中定义的"),s("code",[a._v("toString()")]),a._v("即可，而基本数据类型转换为 String\n类型则要麻烦得多。为解决此类问题 ，Java为每种基本数据类型分别设计了对应的类，称之为包装类(Wrapper Classes)，\n也有教材称为外覆类或数据类型类。")]),a._v(" "),s("p",[a._v("同时也存在拆箱和装箱的概念。")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("基本数据类型")]),a._v(" "),s("th",[a._v("对应包装类型")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("int(4字节)")]),a._v(" "),s("td",[a._v("Integer")])]),a._v(" "),s("tr",[s("td",[a._v("byte(1字节)")]),a._v(" "),s("td",[a._v("Byte")])]),a._v(" "),s("tr",[s("td",[a._v("short(2字节)")]),a._v(" "),s("td",[a._v("Short")])]),a._v(" "),s("tr",[s("td",[a._v("long(8字节)")]),a._v(" "),s("td",[a._v("Long")])]),a._v(" "),s("tr",[s("td",[a._v("float(4字节)")]),a._v(" "),s("td",[a._v("Float")])]),a._v(" "),s("tr",[s("td",[a._v("double(8字节)")]),a._v(" "),s("td",[a._v("Double")])]),a._v(" "),s("tr",[s("td",[a._v("char(2字节)")]),a._v(" "),s("td",[a._v("Character")])]),a._v(" "),s("tr",[s("td",[a._v("Boolean(未定)")]),a._v(" "),s("td",[a._v("Boolean")])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);